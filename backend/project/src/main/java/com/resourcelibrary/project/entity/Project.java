package com.resourcelibrary.project.entity;

import java.util.Set;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBDocument;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTyped;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperFieldModel.DynamoDBAttributeType;

import lombok.Data;

@Data
@DynamoDBDocument
@DynamoDBTable(tableName="Project")
public class Project {
    @DynamoDBHashKey
    @DynamoDBAutoGeneratedKey
    public String id;

    @DynamoDBAttribute
    public String title;

    @DynamoDBAttribute
    public String path;

    @DynamoDBAttribute
    public String bannerUrl;

    @DynamoDBAttribute
    public String description;

    
    @DynamoDBAttribute
    public String goals;

    
    @DynamoDBTyped(DynamoDBAttributeType.SS)
    public Set<String> dataDashboardPaths;

    
    @DynamoDBTyped(DynamoDBAttributeType.SS)
    public Set<String> partnerContent;

    
    @DynamoDBTyped(DynamoDBAttributeType.SS)
    public Set<String> resources;

    @DynamoDBTyped(DynamoDBAttributeType.SS)
    public Set<String> teamMembers;




    public Project(){

    }



    public Project(String id, String path, String bannerUrl, String title, String description, String goals,
            Set<String> dataDashboardPaths, Set<String> partnerContent, Set<String> resources, Set<String> teamMembers) {
        this.id = id;
        this.bannerUrl = bannerUrl;
        this.title = title;
        this.description = description;
        this.goals = goals;
        this.dataDashboardPaths = dataDashboardPaths;
        this.partnerContent = partnerContent;
        this.resources = resources;
        this.teamMembers = teamMembers;
        this.path = path;
    }

    public String toJSONString() throws Exception {
        ObjectMapper objectMapper = new ObjectMapper();
        String json = objectMapper.writeValueAsString(this);
        return json;
    }

    
    
}
